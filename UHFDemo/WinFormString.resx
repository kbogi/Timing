<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Antenna" xml:space="preserve">
    <value>Ant</value>
  </data>
  <data name="Connect" xml:space="preserve">
    <value>Connect</value>
  </data>
  <data name="CRC" xml:space="preserve">
    <value>CRC</value>
  </data>
  <data name="Data" xml:space="preserve">
    <value>Data</value>
  </data>
  <data name="DataLen" xml:space="preserve">
    <value>DataLen</value>
  </data>
  <data name="Disable" xml:space="preserve">
    <value>Disable</value>
  </data>
  <data name="Disconnect" xml:space="preserve">
    <value>Disconnect</value>
  </data>
  <data name="Enable" xml:space="preserve">
    <value>Enable</value>
  </data>
  <data name="EPC" xml:space="preserve">
    <value>EPC</value>
  </data>
  <data name="Freq" xml:space="preserve">
    <value>Freq(MHz)</value>
  </data>
  <data name="GetAndClearBuffer" xml:space="preserve">
    <value>Get And Clear Buffer</value>
  </data>
  <data name="GetBuffer" xml:space="preserve">
    <value>Get Buffer</value>
  </data>
  <data name="GettingBuffer" xml:space="preserve">
    <value>Getting Buffer</value>
  </data>
  <data name="Inventorying" xml:space="preserve">
    <value>Inventorying</value>
  </data>
  <data name="ncDescription" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="ncIp" xml:space="preserve">
    <value>IP</value>
  </data>
  <data name="ncMac" xml:space="preserve">
    <value>Mac</value>
  </data>
  <data name="ncMask" xml:space="preserve">
    <value>Mask</value>
  </data>
  <data name="nNoNetCardSelect" xml:space="preserve">
    <value>please select a netcard first</value>
  </data>
  <data name="npChipVer" xml:space="preserve">
    <value>ChipVer</value>
  </data>
  <data name="npDefault" xml:space="preserve">
    <value>Default</value>
  </data>
  <data name="npDeviceIp" xml:space="preserve">
    <value>DeviceIp</value>
  </data>
  <data name="npDeviceMac" xml:space="preserve">
    <value>DeviceMac</value>
  </data>
  <data name="npDeviceName" xml:space="preserve">
    <value>DeviceName</value>
  </data>
  <data name="npGet" xml:space="preserve">
    <value>Get</value>
  </data>
  <data name="npPcMac" xml:space="preserve">
    <value>PcMac</value>
  </data>
  <data name="npReset" xml:space="preserve">
    <value>Reset</value>
  </data>
  <data name="npRetry" xml:space="preserve">
    <value>Retry</value>
  </data>
  <data name="npSave" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="npSearchingNetPort" xml:space="preserve">
    <value>Searching NetPort</value>
  </data>
  <data name="npSearchNetPort" xml:space="preserve">
    <value>Search NetPort</value>
  </data>
  <data name="opSuccessCount" xml:space="preserve">
    <value>SuccessCount</value>
  </data>
  <data name="PC" xml:space="preserve">
    <value>PC</value>
  </data>
  <data name="PerSec" xml:space="preserve">
    <value>tags/sec</value>
  </data>
  <data name="Phase" xml:space="preserve">
    <value>Phase</value>
  </data>
  <data name="ReadCount" xml:space="preserve">
    <value>ReadCount</value>
  </data>
  <data name="Rssi" xml:space="preserve">
    <value>Rssi(dBm)</value>
  </data>
  <data name="Sec" xml:space="preserve">
    <value>sec</value>
  </data>
  <data name="Start" xml:space="preserve">
    <value>Start</value>
  </data>
  <data name="StartInventory" xml:space="preserve">
    <value>Inventory</value>
  </data>
  <data name="Stop" xml:space="preserve">
    <value>Stop</value>
  </data>
  <data name="StopInventory" xml:space="preserve">
    <value>Stop</value>
  </data>
  <data name="Stopping" xml:space="preserve">
    <value>Stopping</value>
  </data>
  <data name="tagmask_Action" xml:space="preserve">
    <value>Action</value>
  </data>
  <data name="tagmask_MaskLen" xml:space="preserve">
    <value>Mask Len(Hex bit)</value>
  </data>
  <data name="tagmask_MaskNo" xml:space="preserve">
    <value>Mask No</value>
  </data>
  <data name="tagmask_MaskValue" xml:space="preserve">
    <value>Mask Value</value>
  </data>
  <data name="tagmask_MemBank" xml:space="preserve">
    <value>MemBank</value>
  </data>
  <data name="tagmask_SessionID" xml:space="preserve">
    <value>Session ID</value>
  </data>
  <data name="tagmask_StartAddr" xml:space="preserve">
    <value>Start Addr(Hex bit)</value>
  </data>
  <data name="tagmask_Truncate" xml:space="preserve">
    <value>Truncate</value>
  </data>
  <data name="Tags" xml:space="preserve">
    <value>tags</value>
  </data>
  <data name="Times" xml:space="preserve">
    <value>times</value>
  </data>
  <data name="tipBlockWrite" xml:space="preserve">
    <value>BlockWrite</value>
  </data>
  <data name="tipClearTagMask" xml:space="preserve">
    <value>ClearTagMask</value>
  </data>
  <data name="tipConnect" xml:space="preserve">
    <value>Connect to Reader</value>
  </data>
  <data name="tipConnectFailedCause" xml:space="preserve">
    <value>Connect Failed, Cause</value>
  </data>
  <data name="tipCustomizeTargetSessionInventory" xml:space="preserve">
    <value>Customize Target And Session Inventory</value>
  </data>
  <data name="tipDataExportSuccess" xml:space="preserve">
    <value>Data export successful</value>
  </data>
  <data name="tipEightBytesAtLeast" xml:space="preserve">
    <value>please input 8 Bytes string at least</value>
  </data>
  <data name="tipEmptyString" xml:space="preserve">
    <value>Empty string is invalid</value>
  </data>
  <data name="tipExecSuccess" xml:space="preserve">
    <value>Execute success</value>
  </data>
  <data name="tipFailedCause" xml:space="preserve">
    <value>Failed, Cause </value>
  </data>
  <data name="tipFastSwitch" xml:space="preserve">
    <value>FastSwitch Inventory</value>
  </data>
  <data name="tipFourBytesAtLeast" xml:space="preserve">
    <value>please input 4 Bytes string at least</value>
  </data>
  <data name="tipFreqNotInRegion" xml:space="preserve">
    <value>Spectrum range does not conform to the specification, please refer to the communication protocol</value>
  </data>
  <data name="tipGetAccessEpcMatch" xml:space="preserve">
    <value>GetAccessEpcMatch</value>
  </data>
  <data name="tipGetAndResetInventoryBuffer" xml:space="preserve">
    <value>GetAndResetInventoryBuffer</value>
  </data>
  <data name="tipGetAntDetector" xml:space="preserve">
    <value>GetAntDetector</value>
  </data>
  <data name="tipGetDrmMode" xml:space="preserve">
    <value>GetDrmMode</value>
  </data>
  <data name="tipGetFirmwareVersion" xml:space="preserve">
    <value>GetFirmwareVersion</value>
  </data>
  <data name="tipGetFrequencyRegion" xml:space="preserve">
    <value>GetFrequencyRegion</value>
  </data>
  <data name="tipGetImpedanceMatch" xml:space="preserve">
    <value>GetImpedanceMatch</value>
  </data>
  <data name="tipGetInternalVersion" xml:space="preserve">
    <value>GetInternalVersion</value>
  </data>
  <data name="tipGetInventoryBuffer" xml:space="preserve">
    <value>GetInventoryBuffer</value>
  </data>
  <data name="tipGetInventoryBufferTagCount" xml:space="preserve">
    <value>GetInventoryBufferTagCount</value>
  </data>
  <data name="tipGetMonzaStatus" xml:space="preserve">
    <value>GetMonzaStatus</value>
  </data>
  <data name="tipGetOutputPower" xml:space="preserve">
    <value>GetOutputPower</value>
  </data>
  <data name="tipGetProfile" xml:space="preserve">
    <value>GetProfile</value>
  </data>
  <data name="tipGetReaderAntGroup" xml:space="preserve">
    <value>GetReaderAntGroup</value>
  </data>
  <data name="tipGetReaderIdentifier" xml:space="preserve">
    <value>GetReaderIdentifier</value>
  </data>
  <data name="tipGetReaderTemperature" xml:space="preserve">
    <value>GetReaderTemperature</value>
  </data>
  <data name="tipGetTagMask" xml:space="preserve">
    <value>GetTagMask</value>
  </data>
  <data name="tipGetWorkAntenna" xml:space="preserve">
    <value>GetWorkAntenna</value>
  </data>
  <data name="tipHaveNoMatch" xml:space="preserve">
    <value>have not match</value>
  </data>
  <data name="tipHaveNotYetSelectedTag" xml:space="preserve">
    <value>Have not yet selected a tag</value>
  </data>
  <data name="tipHeartbeatEn" xml:space="preserve">
    <value>TCP CLIENT mode, module Keep Alive, can detect when the device is disconnected</value>
  </data>
  <data name="tipHwCfgComCfgEn" xml:space="preserve">
    <value>Serial port negotiation configuration Enable</value>
  </data>
  <data name="tipHwCfgDhcpEn" xml:space="preserve">
    <value>Dhcp Enable</value>
  </data>
  <data name="tipInvalidParameter" xml:space="preserve">
    <value>Invalid Parameter</value>
  </data>
  <data name="tipInventory" xml:space="preserve">
    <value>Buffer Inventory</value>
  </data>
  <data name="tipInventory6B" xml:space="preserve">
    <value>Inventory 6B Tag</value>
  </data>
  <data name="tipInventoryReal" xml:space="preserve">
    <value>RealTime Inventory</value>
  </data>
  <data name="tipKillTag" xml:space="preserve">
    <value>KillTag</value>
  </data>
  <data name="tipLock6BTag" xml:space="preserve">
    <value>Lock 6B Tag</value>
  </data>
  <data name="tipLockTag" xml:space="preserve">
    <value>LockTag</value>
  </data>
  <data name="tipNoTagMask" xml:space="preserve">
    <value>no tag mask found</value>
  </data>
  <data name="tipPhyDisconnect" xml:space="preserve">
    <value>Network disconnection: close the connection</value>
  </data>
  <data name="tipQuery6BTag" xml:space="preserve">
    <value>Query 6B Tag</value>
  </data>
  <data name="tipRandEn" xml:space="preserve">
    <value>Use random local port in tcp client mode</value>
  </data>
  <data name="tipRead6BTag" xml:space="preserve">
    <value>Read 6B Tag</value>
  </data>
  <data name="tipReadGpioValue" xml:space="preserve">
    <value>ReadGpioValue</value>
  </data>
  <data name="tipReadTag" xml:space="preserve">
    <value>ReadTag</value>
  </data>
  <data name="tipReconnectSuccess" xml:space="preserve">
    <value>Reconnect Success</value>
  </data>
  <data name="tipResetCtrl" xml:space="preserve">
    <value>When network connection: clear serial port data</value>
  </data>
  <data name="tipResetInventoryBuffer" xml:space="preserve">
    <value>ResetInventoryBuffer</value>
  </data>
  <data name="tipResetReader" xml:space="preserve">
    <value>Reset Reader</value>
  </data>
  <data name="tipSelectLockBank" xml:space="preserve">
    <value>please select a membank to lock</value>
  </data>
  <data name="tipSelectLockType" xml:space="preserve">
    <value>please select lockType</value>
  </data>
  <data name="tipSelectMemBank" xml:space="preserve">
    <value>please select a membank first</value>
  </data>
  <data name="tipSetAccessEpcMatch" xml:space="preserve">
    <value>SetAccessEpcMatch</value>
  </data>
  <data name="tipSetAntDetector" xml:space="preserve">
    <value>SetAntDetector</value>
  </data>
  <data name="tipSetBeeperMode" xml:space="preserve">
    <value>SetBeeperMode</value>
  </data>
  <data name="tipSetFrequencyRegion" xml:space="preserve">
    <value>SetFrequencyRegion</value>
  </data>
  <data name="tipSetImpedanceMatch" xml:space="preserve">
    <value>SetImpedanceMatch</value>
  </data>
  <data name="tipSetMonzaStatus" xml:space="preserve">
    <value>SetMonzaStatus</value>
  </data>
  <data name="tipSetOutputPower" xml:space="preserve">
    <value>SetOutputPower</value>
  </data>
  <data name="tipSetProfile" xml:space="preserve">
    <value>SetProfile</value>
  </data>
  <data name="tipSetReadAddress" xml:space="preserve">
    <value>SetReadAddress</value>
  </data>
  <data name="tipSetReaderAntGroup" xml:space="preserve">
    <value>SetReaderAntGroup</value>
  </data>
  <data name="tipSetReaderIdentifier" xml:space="preserve">
    <value>SetReaderIdentifier</value>
  </data>
  <data name="tipSetTagMask" xml:space="preserve">
    <value>SetTagMask</value>
  </data>
  <data name="tipSetTempOutpower" xml:space="preserve">
    <value>SetTempOutpower</value>
  </data>
  <data name="tipSetUartBaudrate" xml:space="preserve">
    <value>SetUartBaudrate</value>
  </data>
  <data name="tipSetWorkAntenna" xml:space="preserve">
    <value>SetWorkAntenna</value>
  </data>
  <data name="tipStopInventory" xml:space="preserve">
    <value>Stop Inventory</value>
  </data>
  <data name="tipTagFocus" xml:space="preserve">
    <value>When enabled, use S1 mode inventory, which applies to most of the Impinj tags</value>
  </data>
  <data name="tipTagMask" xml:space="preserve">
    <value>TagMask</value>
  </data>
  <data name="tipThisByteIsAlreadyLocked" xml:space="preserve">
    <value>The byte is already locked</value>
  </data>
  <data name="tipThisByteIsNotLocked" xml:space="preserve">
    <value>This byte is not locked</value>
  </data>
  <data name="tipTwelveBytesAtLeast" xml:space="preserve">
    <value>please input 12 Bytes string at least</value>
  </data>
  <data name="tipUnknowError" xml:space="preserve">
    <value>Unknow Error</value>
  </data>
  <data name="tipWrite6BTag" xml:space="preserve">
    <value>Write 6B Tag</value>
  </data>
  <data name="tipWriteGpioValue" xml:space="preserve">
    <value>WriteGpioValue</value>
  </data>
  <data name="tipWriteTag" xml:space="preserve">
    <value>WriteTag</value>
  </data>
  <data name="tWrongIpAddr" xml:space="preserve">
    <value>Ip addr error, eg: 192.168.8.168</value>
  </data>
  <data name="tWrongMacAddr" xml:space="preserve">
    <value>Mac adrr error, eg: 12:34:56:AB:CD:EF</value>
  </data>
  <data name="useCmd8A25" xml:space="preserve">
    <value>Temp Power</value>
  </data>
</root>